#
# MIT License
#
# (C) Copyright 2020-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

ARG ALGOL=https://artifactory.algol60.net/artifactory

FROM artifactory.algol60.net/csm-docker/stable/cray-aee:1.2.83 as testing

ARG ARTI ALGOL

# Configure repos to simulate what nexus will provide
# Install timezone for ca-cert and vim for debugging
RUN \
    zypper ar --no-gpgcheck ${ALGOL}/uan-rpms/hpe/stable/sle-15sp3 uan-rpms && \
    zypper refresh && \
    zypper install -y iptables timezone vim

COPY ansible/ /opt/cray/ansible
COPY tests/uan-aee-test-helper.sh /

# Install some fake versions of these ansible modules for testing
COPY tests/csm_read_configmap.py /usr/share/ansible/plugins/modules/
COPY tests/csm_read_secret.py /usr/share/ansible/plugins/modules/

# Remove this ansible callback as it produces misleading errors for testing
RUN rm /usr/share/ansible/plugins/callback/cfs_aggregator.py

# Prep the test environment
RUN /uan-aee-test-helper.sh

# Running ansible-playbook with --syntax-check
RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local --syntax-check

# Running ansible-playbook with --check and cray_cfs_image=true to simulate CFS image customization
RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local -e cray_cfs_image=true  --check

# Running ansible-playbook with --check and cray_cfs_image=false to simulate CFS node personalization
RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local -e cray_cfs_image=false --check

# Use this entrypoint to allow for easy debugging
ENTRYPOINT /bin/sh

# Use the cf-gitea-import as a base image with UAN content copied in
FROM artifactory.algol60.net/csm-docker/stable/cf-gitea-import:1.7.0

WORKDIR /
ENV CF_IMPORT_PRODUCT_NAME=uan

# Copy in UAN Ansible content
COPY ansible/ /content/

# Base image entrypoint takes it from here
