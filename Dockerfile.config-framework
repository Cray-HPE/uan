#
# MIT License
#
# (C) Copyright 2020-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

ARG ARTI=https://arti.hpc.amslabs.hpecorp.net:443/artifactory
ARG ALGOL=https://artifactory.algol60.net/artifactory
ARG COS_RELEASE_PREFIX=release
ARG COS_RELEASE_VERSION=cos-2.4
ARG COS_SLES_VERSION=sle15_sp4_ncn
ARG COS_RPMS=cos-rpm-stable-local
ARG CSM_SLES_VERSION=sle-15sp3

# Dockerfile for importing UAN content into gitea instances on Shasta
FROM artifactory.algol60.net/registry.suse.com/suse/sle15:15.3 as product-content-base
WORKDIR /

ARG ARTI ALGOL COS_RELEASE_PREFIX COS_RELEASE_VERSION COS_SLES_VERSION COS_RPMS CSM_SLES_VERSION

# Install dependencies as RPMs
RUN \
    zypper ar --no-gpgcheck ${ALGOL}/csm-rpms/hpe/stable/${CSM_SLES_VERSION}                                          shasta-scms && \
    zypper ar --no-gpgcheck ${ARTI}/${COS_RPMS}/${COS_RELEASE_PREFIX}/${COS_RELEASE_VERSION}/${COS_SLES_VERSION}          shasta-cos  && \
    zypper refresh && \
    zypper in -y \
        cf-cme-sysconfig-config-framework \
        cf-cme-overlay-preload-config-framework \
        lustre-cfs-config-framework \
        cray-dvs-helper-config-framework \
        cray-lnet-helper-config-framework \
        cf-ca-cert-config-framework \
        csm-ssh-keys-1.3.79-1.noarch \
        csm-ssh-keys-roles-1.3.79-1.noarch

FROM artifactory.algol60.net/csm-docker/stable/cray-aee:1.2.83 as testing

ARG ARTI ALGOL COS_RELEASE_PREFIX COS_RELEASE_VERSION COS_RPMS
ARG COS_SLES_VERSION=sle15_sp3_cn
ARG COS_SHS_SLES_VERSION=shs_master_sle15_sp4_cn
ARG COS_BASE_SLES_VERSION=sle15_sp4_base_cn
ARG SHS_RELEASE_PREFIX=release/slingshot-2.0
ARG SHS_COS_VERSION=cos_2_4_sle15_sp4_cn

# Configure repos to simulate what nexus will provide
# Install timezone for ca-cert and vim for debugging
RUN \
    zypper ar --no-gpgcheck ${ALGOL}/uan-rpms/hpe/stable/sle-15sp3                                                         uan-rpms         && \
    zypper ar --no-gpgcheck ${ARTI}/${COS_RPMS}/${COS_RELEASE_PREFIX}/${COS_RELEASE_VERSION}/${COS_SLES_VERSION}      cos-rpms-cn      && \
    zypper ar --no-gpgcheck ${ARTI}/${COS_RPMS}/${COS_RELEASE_PREFIX}/${COS_RELEASE_VERSION}/${COS_SHS_SLES_VERSION}  cos-shs-rpms-cn  && \
    zypper ar --no-gpgcheck ${ARTI}/slingshot-host-software-rpm-stable-local/${SHS_RELEASE_PREFIX}/${SHS_COS_VERSION}      shs-rpms-cn      && \
    zypper refresh && \
    zypper install -y iptables timezone vim

COPY --from=product-content-base /opt/cray/ansible/ /opt/cray/ansible/
COPY ansible/ /opt/cray/ansible
COPY tests/uan-aee-test-helper.sh /

# Install some fake versions of these ansible modules for testing
COPY tests/csm_read_configmap.py /usr/share/ansible/plugins/modules/
COPY tests/csm_read_secret.py /usr/share/ansible/plugins/modules/

# Remove this ansible callback as it produces misleading errors for testing
RUN rm /usr/share/ansible/plugins/callback/cfs_aggregator.py

# Prep the test environment
RUN /uan-aee-test-helper.sh

# Running ansible-playbook with --syntax-check
#RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local --syntax-check

# Running ansible-playbook with --check and cray_cfs_image=true to simulate CFS image customization
#RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local -e cray_cfs_image=true  --check

# Running ansible-playbook with --check and cray_cfs_image=false to simulate CFS node personalization
#RUN ansible-playbook /opt/cray/ansible/site.yml --connection=local -e cray_cfs_image=false --check

# Use this entrypoint to allow for easy debugging
ENTRYPOINT /bin/sh

# Use the cf-gitea-import as a base image with UAN content copied in
FROM artifactory.algol60.net/csm-docker/stable/cf-gitea-import:1.4.69

WORKDIR /
ENV CF_IMPORT_PRODUCT_NAME=uan

# Copy in dependencies' Ansible content
COPY --from=product-content-base /opt/cray/ansible/roles/      /content/roles/
COPY --from=product-content-base /opt/cray/ansible/playbooks/  /content/playbooks/

# Copy in UAN Ansible content
COPY ansible/ /content/

# Base image entrypoint takes it from here
