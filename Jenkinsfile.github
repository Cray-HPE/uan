@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME_CONFIG_IMAGE = "cray-uan-config"
        DESCRIPTION = "Cray UAN Recipes and Images"
        IS_STABLE = getBuildIsStable()
        VERSION = getDockerBuildVersion(isStable: env.IS_STABLE)
        DOCKER_ARGS = getDockerBuildArgs(name: env.NAME, description: env.DESCRIPTION)
        CHART_NAME = "cray-uan-install"
        CHART_VERSION = getChartVersion(name: env.CHART_NAME, isStable: env.IS_STABLE)
    }

    stages {
        stage("Build") {
            parallel {
                stage('Config Image') {
                    steps {
                        sh "make config_image"
                    }
                }

                stage('Chart') {
                    steps {
                        sh "make chart"
                    }
                }
            }
        }

        stage('Publish ') {
            steps {
                script {
                    publishCsmDockerImage(image: env.NAME_CONFIG_IMAGE, tag: env.VERSION, isStable: env.IS_STABLE, snykTargetFile: "Dockerfile.config-framework")
                    publishCsmHelmCharts(component: env.CHART_NAME, chartsPath: "${WORKSPACE}/kubernetes/.packaged", isStable: env.IS_STABLE)
                }
            }
        }
    }

    post {
        always {
            // Own files so jenkins can clean them up later
            postChownFiles()
        }
    }
}
