#
# MIT License
#
# (C) Copyright 2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
#!/usr/bin/env ansible-playbook
---
- name: setup cfs_image host group
  gather_facts: false
  hosts: all
  tasks:
    - name: Add image customization hosts to the cfs_image host group.
      add_host:
        name: '{{ inventory_hostname }}'
        groups: cfs_image
      when: cray_cfs_image

# K3S Image Customization.
# - Download K3S, K3S airgapped images, Helm charts
# - Create directories and copy files
#
# To install artifacts without requiring an image build,
# modify '&cfs_image' from the 'hosts' target (remove or
# use !cfs_image)
#
- hosts: Application:Compute:&cfs_image
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - vars/uan_versions.yml
    - vars/uan_k3s.yml
    - vars/uan_helm.yml

  tasks:
    - name: Install K3S and Helm artifacts
      include_role:
        name: "{{ item }}"
      with_items:
        - uan_k3s_stage
        - uan_helm

# K3S Server or Agent - Node Personalization
- hosts: k3s_server:k3s_agent:!cfs_image
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - vars/uan_k3s.yml
  environment:
    KUBECONFIG: "{{ k3s_config }}"

  tasks:
    - name: Roles for K3S nodes
      include_role:
        name: uan_k3s_install

# K3S Server - Deploy services
- hosts: k3s_server:!cfs_image
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - vars/uan_versions.yml
    - vars/uan_k3s.yml
    - vars/uan_helm.yml
  environment:
    KUBECONFIG: "{{ k3s_config }}"

  tasks:
    - name: Configure MetalLB
      include_role:
        name: uan_metallb
      run_once: true

    - name: Install HAProxy chart(s)
      include_tasks: roles/uan_haproxy/tasks/main.yml
      loop: "{{ uan_haproxy }}"
      run_once: true

# SSHD startup for use with HAProxy running in K3S
- hosts: k3s_server:k3s_agent:!cfs_image
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - vars/uan_sshd.yml
  tasks:
    - set_fact:
        uan_sshd_configs_dict: "{{ uan_sshd_configs | items2dict(key_name='name', value_name='port') }}"
      when: uan_sshd_configs is defined

    - name: "Fail if duplicate SSHD ports are detected"
      fail:
        msg: "Duplicate SSHD ports defined: {{ uan_sshd_configs_dict.values() | duplicates }}. Check uan_sshd_configs and fix."
      when: uan_sshd_configs_dict.values() | duplicates | length > 0

    - name: Application image customization play
      include_tasks: roles/uan_sshd/tasks/main.yml
      loop: "{{ uan_sshd_configs }}"
