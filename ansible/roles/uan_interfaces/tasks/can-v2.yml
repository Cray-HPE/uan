# Copyright 2020, Hewlett Packard Enterprise Development LP
---

- name: Configure CAN v2 on UANs
  block:
  - debug:
     msg: "Customer Access Network - {{ imported_customer_var.customer_access_network }}"

  - name: Get NMN IP
    set_fact:
      nmn_ip: "{{ item.address }}"
    when: item.label == ansible_hostname | regex_replace('(-nmn)$|(-can)$') + '-nmn'
    loop: "{{ imported_networks.networks.node_management.blocks.ipv4[0].subnets[0].reserved | list }}"

  - name: Get MTL IP
    set_fact:
      mtl_ip: "{{ item.address }}"
    when: item.label == ansible_hostname | regex_replace('(-nmn)$|(-can)$') + '-mtl'
    loop: "{{ imported_networks.networks.metal_management.blocks.ipv4[0].subnets[0].reserved | list }}"

  - name: Get last octet of NMN IP
    set_fact:
      octet: "{{ nmn_ip.split('.')[3] }}"

  - name: Generate CAN IP
    set_fact:
      can_ip: "{{ imported_customer_var.customer_access_network | ipaddr(octet|int) | ipaddr('address') }}"
      can_prefix: "{{ imported_customer_var.customer_access_network | ipaddr('prefix') }}"

  - debug:
      msg: "NMN IP - {{ nmn_ip }}; CAN IP - {{ can_ip }}"

  - name: Configure bond slaves
    copy:
      src: ifcfg-bond-slaves
      dest: "/etc/sysconfig/network/ifcfg-{{ item }}"
      owner: root
      group: root
      mode: '0644'
    when: uan_can_if == "bond0"
    loop: "{{ uan_can_devices }}"

  - name: Configure ifcfg-bond0
    template:
      src: ifcfg-bond0.j2
      dest: /etc/sysconfig/network/ifcfg-bond0
      mode: 0644
    when: uan_can_if == "bond0"

  - name: Configure ifcfg-vlan007
    template:
      src: ifcfg-vlan007-v2.j2
      dest: /etc/sysconfig/network/ifcfg-vlan007
      mode: 0644

  - name: Configure ifroute-vlan007
    template:
      src: ifroute-vlan007.j2
      dest: /etc/sysconfig/network/ifroute-vlan007
      owner: root
      mode: 0600

  - name: Ensure wicked script directories exist
    file:
      path: "/etc/wicked/scripts/{{ item }}"
      state: directory
    loop: [ "post-up", "post-down" ]

  - name: Configure can-up.sh
    template:
      src: can-up.j2
      dest: "/etc/wicked/scripts/post-up/can-up.sh"
      owner: root
      mode: 0755

  - name: Configure can-down.sh
    template:
      src: can-down.j2
      dest: "/etc/wicked/scripts/post-down/can-down.sh"
      owner: root
      mode: 0755

  - name: ifdown vlan007 and eth0 interfaces to set the interface config and routes
    shell: "wicked ifdown {{ item }};sleep 5"
    changed_when: result.rc == 0
    failed_when: result.rc != 0
    register: result
    with_items:
      - eth0
      - vlan007

  - name: Restarting wicked-nanny
    shell: "systemctl restart wickedd-nanny;sleep 5"
    changed_when: result.rc == 0
    failed_when: result.rc != 0
    register: result

  - name: Remove existing default route
    command: "ip route delete default"
    changed_when: result.rc != 0 or result.rc == 2
    failed_when: result.rc != 0 and result.rc != 2
    register: result

  - name: ifup vlan007 and eth0 interfaces to set the interface config and routes
    shell: "wicked ifup {{ item }};sleep 10"
    changed_when: result.rc == 0
    failed_when: result.rc != 0
    register: result
    with_items:
      - vlan007
      - eth0

  - name: Check that we have the default route we are expecting
    shell: "ip route | grep default | grep -q '{{ imported_customer_var.customer_access_gateway }}'"
    failed_when: result.rc != 0
    register: result

  - name: Check that the vlan007 interface has the expected IP
    shell: "ip addr show vlan007 | grep -q {{ can_ip }}/{{ can_prefix }}"
    failed_when: result.rc != 0
    register: result

  when:
    - imported_customer_var.customer_access_network is defined
    - imported_customer_var.customer_access_gateway is defined
    - imported_networks.networks.node_management is defined
