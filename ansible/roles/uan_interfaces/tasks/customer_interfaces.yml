# Copyright Hewlett Packard Enterprise Development LP
---
- name: Configure customer defined networks on UAN
  block:

  - name: Setup ifcfg-x files
    template:
      src: ifcfg-x.j2
      dest: "/etc/sysconfig/network/ifcfg-{{ item.name }}"
      mode: 0644
    when: item.name is defined
    loop: "{{ customer_uan_interfaces }}"

  - name: Ensure ifroute-x file exists
    copy:
      content: ""
      dest: "/etc/sysconfig/network/ifroute-{{ item.name }}"
      force: no
      group: root
      owner: root
      mode: 0600
    when: item.name is defined
    loop: "{{ customer_uan_routes }}"

  - name: Setup ifroute-x
    lineinfile:
      dest: "/etc/sysconfig/network/ifroute-{{ item.0.name }}"
      state: present
      regex: "{{ item.1 }}"
      line: "{{ item.1 }}"
    when: item.0.name is defined
    with_subelements:
      - "{{ customer_uan_routes }}"
      - routes

  - name: Ensure ifrule-x file exists
    copy:
      content: ""
      dest: "/etc/sysconfig/network/ifrule-{{ item.name }}"
      force: no
      group: root
      owner: root
      mode: 0600
    when: item.name is defined
    loop: "{{ customer_uan_rules }}"

  - name: Setup ifrule-x
    lineinfile:
      dest: "/etc/sysconfig/network/ifrule-{{ item.0.name }}"
      state: present
      regex: "{{ item.1 }}"
      line: "{{ item.1 }}"
    when: item.0.name is defined
    with_subelements:
      - "{{ customer_uan_rules }}"
      - rules

  - name: Ensure routes file exists
    copy:
      content: ""
      dest: "/etc/sysconfig/network/routes"
      force: no
      group: root
      owner: root
      mode: 0600
    when: item.routes is defined
    loop: "{{ customer_uan_global_routes }}"

  - name: Setup routes
    lineinfile:
      dest: "/etc/sysconfig/network/routes"
      state: present
      regex: "{{ item.1 }}"
      line: "{{ item.1 }}"
    when: item.1 is defined
    with_subelements: 
      - "{{ customer_uan_global_routes }}"
      - routes

  - name: Restart customer interfaces to set the interface config and routes
    shell: "wicked ifdown {{ item.name }};sleep 5;wicked ifup {{ item.name }}"
    changed_when: result.rc == 0
    failed_when: result.rc != 0
    register: result
    when: item.name is defined
    loop: "{{ customer_uan_interfaces }}"

  - name: Check that the customer interfaces have the expected IPs
    shell: "ip addr show {{ item.name }} | grep -q {{ item.ipaddr }}/{{ item.prefixlen }}"
    failed_when: result.rc != 0
    register: result
    when: item.name is defined
    loop: "{{ customer_uan_interfaces }}"
  
  when: not cray_cfs_image
