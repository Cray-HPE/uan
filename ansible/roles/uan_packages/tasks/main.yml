#
# MIT License
#
# (C) Copyright [2020-2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# Tasks for the uan_packages role

# Note: csm_read_secret is provided by the AEE (Ansible Execution Environment) image
- name: Fetch the HPE GPG Signing Key from the K8S secret
  no_log: false
  local_action:
    module: csm_read_secret
    name: "{{ uan_gpg_key_k8s_secret }}"
    namespace: "{{ uan_gpg_key_k8s_namespace }}"
    key: "{{ uan_gpg_key_k8s_field }}"
    decrypt: True
  register: hpe_gpg_pubkey
  when: not uan_disable_gpg_check
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create a temporary file to store the key content
  tempfile:
    state: file
    suffix: key
  register: temp_key_file
  when: not uan_disable_gpg_check

- name: Copy the key content to a temporary file
  copy:
    content: "{{ hpe_gpg_pubkey.response }}"
    dest: "{{ temp_key_file.path }}"
  when: not uan_disable_gpg_check

- name: Install the HPE Signing Key
  rpm_key:
    state: present
    key: "{{ temp_key_file.path }}"
  when: not uan_disable_gpg_check

- name: Configure UAN RPM Repos (SLES-based)
  zypper_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    repo: "{{ item.repo }}"
    priority: "{{ item.priority }}"
    state: present
    disable_gpg_check: "{{ item.disable_gpg_check | default(no) }}"
  when:
    - ansible_distribution == "SLES"
  with_items: "{{ uan_sles15_repositories_add }}"

# UAN repos are generated during the release distribution creation and
# therefore repo metadata is not signed. Allow for the repo metadata to be
# unsigned, but still check the signature on individual packages.
- name: Allow unsigned repo metadata
  command: "zypper modifyrepo --gpgcheck-allow-unsigned-repo --all"
  args:
    warn: no  # Ansible's Zypper module does not provide this feature
  when:
    - ansible_distribution == "SLES"

- name: Remove RPMs not needed by the UAN
  zypper:
    name: "{{ uan_sles15_packages_remove }}"
    state: absent
  when:
    - ansible_distribution == "SLES"

- name: Install UAN RPMs (SLES-based)
  zypper:
    name: "{{ item.name }}"
    state: latest
    update_cache: yes
    disable_gpg_check: "{{ item.disable_gpg_check | default(no) }}"
  when:
    - ansible_distribution == "SLES"
  register: result
  until: result is not failed
  retries: 3
  delay: 3
  loop: "{{ uan_sles15_packages_add }}"

