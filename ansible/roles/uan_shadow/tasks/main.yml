#
# MIT License
#
# (C) Copyright [2021] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
---
# The hashi_vault lookup plugin doesn't support kubernetes auth,
# so we get the token using the REST API
- name: Get vault token
  uri:
    url: "{{ uan_vault_url }}/v1/auth/kubernetes/login"
    method: POST
    body:
      jwt: "{{ lookup('file', uan_vault_jwt_file) }}"
      role: "{{ lookup('file', uan_vault_role_file) }}"
    body_format: json
  register: vault_login
  delegate_to: 127.0.0.1
  run_once: true
  no_log: true

- name: Retrieve UAN credential
  set_fact:
    root_passwd: "{{ lookup('hashi_vault',
      'secret=' + uan_vault_path + ':' + uan_vault_key +
      ' token=' + vault_login.json.auth.client_token +
      ' url=' + uan_vault_url) }}"
  no_log: true

- name: Change root password in /etc/shadow
  lineinfile:
    path: /etc/shadow
    regexp: '^(root:)[^:]*(:.*)$'
    line: "\\1{{ root_passwd }}\\2"
    backrefs: yes
